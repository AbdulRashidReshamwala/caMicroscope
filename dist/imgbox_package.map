{"version":3,"sources":["LocalStore.js","ImgBoxMods.js","imgbox_package.js"],"names":["init_LocalStore","findInIDB","type","query","Promise","res","rej","prototype","db","then","x","transaction","objectStore","getAll","data","filter","matching","i","Object","byString","findInLocalStorage","JSON","parse","window","localStorage","getItem","getInLocalStorage","id","idb","openDb","createObjectStore","autoIncrement","warn","o","s","a","replace","split","n","length","k","validation","Store","filterBroken","b","findMarkTypes","slide","name","unique","Set","map","findMark","footprint","source","x0","x1","y0","y1","getMarkByIds","ids","push","getMark","addMark","json","mark","errors","putInLocalStorage","newData","Date","now","setItem","stringify","deleteMark","removeFromLocalStorage","log","diff","findHeatmap","findHeatmapType","getHeatmap","execution_id","addHeatmap","heatmap","putInIDB","add","deleteHeatmap","removeFromIDB","delete","clearHeatmaps","clearDBFromIDB","clear","export","import","findSlide","specimen","study","location","params","slideId","URLSearchParams","document","search","substring","get","getSlide","local_dummy","findTemplate","getTemplate","DownloadMarksToFile","$D","decodeURIComponent","text","element","createElement","blob","Blob","uri","URL","createObjectURL","setAttribute","style","display","body","appendChild","click","removeChild","LoadMarksFromFile","onchange","event","input","target","reader","FileReader","onload","result","forEach","provenance","image","$VALIDATION","data2","concat","error","reload","e","readAsText","files","updateHeatmapFields","fields","setting","hm","addHeatmapEdit","addLog","info","updateHeatmapEdit","user","deleteHeatmapEdit","defaultTemplate","defaultPens","color","mode","penConfig","config_name","configuration","getConfigByName","template_data","ImgBoxMods","default_loadImg","CaMic","loadImg","func","img_id","slideName","response","status","tile_count","Math","ceil","log2","max","height","width","scaleFactors","imbox_source","viewer","open","mpp_x","mpp_y","mpp","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","url","call","textContent","catch","console"],"mappings":"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,MAGV,CACS,MAAA,QACA,MAAA,QACA,MAAA,UACD,KAAA,CAAEC,MAAO,UAAWC,KAAM,QAAS5J,KAAM,qBAIrD,CACS,MAAA,WACA,MAAA,WACG,SAAA,CACR,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,iBACA,KAAA,MAGV,CACS,MAAA,QACA,MAAA,QACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,QACA,KAAA,uBAOlB,CACS,MAAA,aACA,MAAA,aACG,SAAA,CACR,CACS,MAAA,WACA,MAAA,WACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,sBACA,KAAA,KAGV,CACS,MAAA,WACA,MAAA,WACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,sBACA,KAAA,OAKd,CACS,MAAA,WACA,MAAA,WACG,SAAA,CACR,CACS,MAAA,WACA,MAAA,WACG,SAAA,CACR,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,oBACA,KAAA,MAGV,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,oBACA,KAAA,QAKd,CACS,MAAA,WACA,MAAA,WACG,SAAA,CACR,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,oBACA,KAAA,MAGV,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,oBACA,KAAA,UAOlB,CACS,MAAA,QACA,MAAA,QACG,SAAA,CACR,CACS,MAAA,WACA,MAAA,WACG,SAAA,CACR,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,iBACA,KAAA,MAGV,CACS,MAAA,IACA,MAAA,IACA,MAAA,UACD,KAAA,CACG,MAAA,UACD,KAAA,OACA,KAAA,iBACA,KAAA,MAGV,CACS,MAAA,IACA,M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","file":"imgbox_package.map","sourceRoot":"../package","sourcesContent":["// overwrite store with equivalent local functions\nfunction init_LocalStore(){\n  // requirements\n  Store.prototype.db = idb.openDb(\"heatmap\", 1, x=>{\n    let recordStore = x.createObjectStore(\"heatmap\", {autoIncrement : true});\n  })\n  console.warn(\"{localstore mods enabled}\")\n  Object.byString = function(o, s) {\n      s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n      s = s.replace(/^\\./, '');           // strip a leading dot\n      var a = s.split('.');\n      for (var i = 0, n = a.length; i < n; ++i) {\n          var k = a[i];\n          if (k in o) {\n              o = o[k];\n          } else {\n              return;\n          }\n      }\n      return o;\n  }\n\n  function findInIDB(type, query){\n    return new Promise((res,rej)=>{\n      Store.prototype.db.then(x=>{\n        var data = x.transaction(type).objectStore(type, 'readonly').getAll()\n        data.then(data=>{\n          res(data.filter(x=>{\n            let matching = true;\n            for (var i in query){\n              matching = matching && Object.byString(x, i) == query[i]\n            }\n            return matching\n          }))\n        })\n      }\n    )\n    })\n  }\n\n  function putInIDB(type, newData){\n    Store.prototype.db.then(x=>{\n          let tx = x.transaction(type, 'readwrite')\n          var store = tx.objectStore(type)\n          store.add(newData)\n    })\n    return newData\n  }\n  function removeFromIDB(type, id){\n    console.warn(\"Some issues with Deleting a Single Heatmap in LocalStore\")\n    Store.prototype.db.then(x=>{\n          let tx = x.transaction(type, 'readwrite')\n          var store = tx.objectStore(type)\n          store.delete(id)\n    })\n    return \"\"\n  }\n  function clearDBFromIDB(type){\n    Store.prototype.db.then(x=>{\n          let tx = x.transaction(type, 'readwrite')\n          var store = tx.objectStore(type)\n          store.clear(type)\n    })\n    return \"\"\n  }\n\n  function findInLocalStorage(type, query){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>{\n        let matching = true;\n        for (var i in query){\n          matching = matching && Object.byString(x, i) == query[i]\n        }\n        return matching\n      })\n    } else {\n      return []\n    }\n\n  }\n\n  function getInLocalStorage(type, id){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>x['_id'] == id)[0]\n    } else {\n      return {}\n    }\n\n  }\n\n  function putInLocalStorage(type, newData){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    data.push(newData)\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return newData\n  }\n\n  function removeFromLocalStorage(type, id){\n    console.log(id)\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    let newData = data.filter(x=>x['_id']['$oid'] !== id)\n    window.localStorage.setItem(type, JSON.stringify(newData))\n    var diff = data.length - newData.length\n    return {'deletedCount': diff , 'rowsAffected': diff}\n  }\n\n\n\n  // stange fixes for potential mismatches in validation version\n  Store.prototype.validation = Store.prototype.validation || {}\n  Store.prototype.filterBroken = Store.prototype.filterBroken || function(a,b){return a}\n  // replace impacted store functionality.\n  Store.prototype.findMarkTypes = function(slide, name){\n    return new Promise(function(res, rej){\n      let query={}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(slide){\n        query['provenance.image.slide'] = slide\n      }\n      let data = findInLocalStorage(\"mark\", query)\n      if (data){\n        const unique = [...new Set(data.map(x => Object.byString(x,'provenance.analysis')))];\n        res(unique)\n      } else {\n        res([])\n      }\n\n      // TODO!!!\n    })\n  }\n\n  Store.prototype.findMark = function(slide, name, footprint, source, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(source){\n        query['provenance.analysis.source']= source\n      }\n      res(findInLocalStorage('mark', query))\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, source, footprint, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let data = []\n      for (var i in ids){\n        data.push(...findInLocalStorage('mark', {'provenance.analysis.execution_id': ids[i], 'provenance.image.slide': slide}))\n      }\n      res(data)\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.getMark = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"mark\", id))\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.addMark = function(json){\n    if (!this.validation.mark(json)){\n      console.warn(this.validation.mark.errors)\n    }\n    return new Promise(function(res, rej){\n      // give it an that's probably semi-unique\n      json['_id'] = json['_id'] || {'$oid': Date.now()}\n      res(putInLocalStorage('mark', json))\n    })\n  }\n  Store.prototype.deleteMark = function(id, slide){\n    return new Promise((res, rej)=>{\n      res(removeFromLocalStorage('mark', id))\n    })\n  }\n  Store.prototype.findHeatmap = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInIDB('heatmap', query))\n    }).then(x=>this.filterBroken(x,\"heatmap\"))\n  }\n  Store.prototype.findHeatmapType = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInIDB('heatmap', query))\n    }).then(x=>this.filterBroken(x,\"heatmap\"))\n  }\n  Store.prototype.getHeatmap = function(slide, execution_id){\n    return new Promise(function(res, rej){\n      let query = {}\n      if(execution_id){\n        query['provenance.analysis.execution_id']= execution_id\n      }\n      res(findInIDB('heatmap', query))\n    }).then(x=>this.filterBroken(x,\"heatmap\"))\n  }\n  Store.prototype.addHeatmap = function(json){\n    // give it an that's probably semi-unique\n    if (!this.validation.heatmap(json)){\n      console.warn(this.validation.heatmap.errors)\n    }\n    json['_id'] = json['_id'] || {'$oid': Date.now()}\n    return new Promise(function(res, rej){\n      res(putInIDB('heatmap', json))\n    })\n  }\n  Store.prototype.deleteHeatmap = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromIDB('heatmap', id))\n    })\n  }\n  Store.prototype.clearHeatmaps = function(){\n    return new Promise(function(res, rej){\n      res(clearDBFromIDB('heatmap'))\n    })\n  }\n\n  // import and export functions\n  Store.prototype.export = function(type){\n    return new Promise(function(res, rej){\n      res(window.localStorage.getItem(type))\n    })\n  }\n  // NOTE -- overwrites\n  Store.prototype.import = function(type, data){\n    return new Promise(function(res, rej){\n      res(window.localStorage.setItem(type, data))\n    })\n  }\n  Store.prototype.findSlide = function(slide, specimen, study, location){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"slideId\") || \"local\";\n      let local_dummy = {\n        '_id': {\"$oid\":slideId},\n        'mpp': '0.001',\n        'location': slideId,\n        'name': slideId\n      }\n      res([local_dummy])\n    })\n  }\n  Store.prototype.getSlide = function(id){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"slideId\") || \"local\";\n      console.log(params)\n      let local_dummy = {\n        '_id': {\"$oid\":slideId},\n        'mpp': '0.001',\n        'location': slideId,\n        'name': slideId\n      }\n      res(local_dummy)\n    })\n  }\n  Store.prototype.findTemplate = function(name,type){\n    let query = {}\n    if (name){\n      query.name = name\n    }\n    if (type){\n      query.type = type\n    }\n    return new Promise(function(res, rej){\n      res(findInLocalStorage(\"template\", query))\n    }).then(x=>this.filterBroken(x,\"template\"))\n  }\n  Store.prototype.getTemplate = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"template\", id))\n    }).then(x=>this.filterBroken(x,\"template\"))\n  }\n  Store.prototype.DownloadMarksToFile = function(){\n      // downloads marks for the current slide only\n      // make the browser download it\n      let slide = $D.params.id // portable?\n      slide = decodeURIComponent(slide) // fix for url fix\n      let query = {}\n      query['provenance.image.slide'] = slide\n      let data = JSON.parse(window.localStorage.getItem(\"mark\"))\n      let text = \"\"\n      if (data) {\n        text = JSON.stringify(data.filter(x => {\n          let matching = true;\n          for (var i in query) {\n            matching = matching && Object.byString(x, i) == query[i]\n          }\n          return matching\n        }))\n      }\n      var element = document.createElement('a');\n      var blob = new Blob([text], {type: \"application/json\"});\n      var uri = URL.createObjectURL(blob);\n      element.setAttribute('href', uri);\n      element.setAttribute('download', \"markups.json\");\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n  }\n  Store.prototype.LoadMarksFromFile = function(){\n    // loads marks for the current slide only, without replacement\n    // open a file selector\n    let slide = $D.params.id\n    slide = decodeURIComponent(slide)\n    var element = document.createElement('input');\n    document.body.appendChild(element);\n    element.setAttribute('type', \"file\")\n    element.style.display = 'position: fixed; top: -100em';\n    element.onchange = function(event) {\n      var input = event.target;\n      var reader = new FileReader();\n      reader.onload = function() {\n        var text = reader.result;\n        try {\n          let data = JSON.parse(text)\n          console.log(data)\n          data.forEach(x => {\n            x.provenance.image.slide = slide\n          })\n          console.log($VALIDATION.mark)\n          let data2 = JSON.parse(window.localStorage.getItem(\"mark\"))\n          data2 = data2 || []\n          console.log(data2)\n          data2 = data2.concat(data)\n          data2 = data2.filter($VALIDATION.mark)\n          console.log(data2)\n          window.localStorage.setItem(\"mark\", JSON.stringify(data2))\n          if ($VALIDATION.mark.errors){\n            console.error($VALIDATION.mark.errors)\n          } else {\n            window.location.reload()\n          }\n\n        } catch (e) {\n          console.error(e)\n        }\n        console.log(text.substring(0, 200));\n      };\n      reader.readAsText(input.files[0]);\n    };\n\n    element.click();\n    document.body.removeChild(element);\n  }\n}\n\nStore.prototype.updateHeatmapFields = function(slide, name, fields, setting){\n  var query = {}\n  if(name){\n    query['provenance.analysis.execution_id']= name\n  }\n  console.log(setting, fields)\n  return new Promise(function(res, rej){\n    findInIDB('heatmap', query).then(x=>{\n      var hm = x[0]\n      removeFromIDB('heatmap', hm['_id']).then(y=>{\n        hm.data = data\n        res(putInIDB('heatmap', hm))\n      })\n    })\n  })\n}\n\nStore.prototype.addHeatmapEdit = function(json){\n  json['_id'] = json['_id'] || {'$oid': Date.now()}\n  return new Promise(function(res, rej){\n    res(putInIDB('heatmapEdit', json))\n  })\n}\n\nStore.prototype.addLog = function(json){\n  console.info(\"[LOG]\", json)\n}\n\nStore.prototype.updateHeatmapEdit = function(user, slide, name, data){\n  var query = {}\n  if(name){\n    query['provenance.analysis.execution_id']= name\n  }\n  return new Promise(function(res, rej){\n    findInIDB('heatmapEdit', query).then(x=>{\n      var hm = x[0]\n      removeFromIDB('heatmapEdit', hm['id']).then(y=>{\n        hm.data = data\n        res(putInIDB('heatmapEdit', hm))\n      })\n    })\n  })\n}\n\nStore.prototype.deleteHeatmapEdit = function(user,slide,name){\n  var query = {}\n  query.user = user\n  if(name){\n    query['provenance.analysis.execution_id']= name\n  }\n  return new Promise(function(res, rej){\n    findInIDB('heatmapEdit', query).then(x=>{\n      res(removeFromIDB('heatmapEdit', x[0]['_id']))\n    })\n  })\n}\n\n// default template\nlet defaultTemplate = {\n    \"_id\": \"0\",\n    \"type\": \"object\",\n    \"id\": \"annotation-form\",\n    \"name\": \"AnnotSchema\",\n    \"description\": \"\",\n    \"links\": [],\n    \"additionalProperties\": false,\n    \"properties\": {\n        \"name\": {\n            \"id\": \"a0\",\n            \"title\": \"Identity Name\",\n            \"type\": \"string\",\n            \"required\": true,\n            \"description\": \"note name\"\n            },\"notes\": {\n            \"id\": \"a1\",\n            \"title\": \"Notes: \",\n            \"type\": \"string\",\n            \"format\":\"textarea\",\n            \"maxLength\": 128\n        }\n    }\n}\n\nlet defaultPens = [\n  {\n    title: \"Lymph\",\n    value: \"Lymph\",\n    children: [\n      {\n        title: \"Positive\",\n        value: \"Positive\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#ff6296\",\n            checked: true,\n            data: {\n              color: \"#ff6296\",\n              mode: \"grid\",\n              type: \"Lymph-Positive\",\n              size: 100\n            }\n          },\n          {\n            title: \"Point\",\n            value: \"Point\",\n            color: \"#ff6296\",\n            data: { color: \"#ff6296\", mode: \"point\", type: \"Lymph-Positive\" }\n          }\n        ]\n      },\n      {\n        title: \"Negative\",\n        value: \"Negative\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#62ffcb\",\n            data: {\n              color: \"#62ffcb\",\n              mode: \"grid\",\n              type: \"Lymph-Negative\",\n              size: 100\n            }\n          },\n          {\n            title: \"Point\",\n            value: \"Point\",\n            color: \"#62ffcb\",\n            data: {\n              color: \"#62ffcb\",\n              mode: \"point\",\n              type: \"Lymph-Negative\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    title: \"Neutrophil\",\n    value: \"Neutrophil\",\n    children: [\n      {\n        title: \"Positive\",\n        value: \"Positive\",\n        color: \"#ffcb62\",\n        data: {\n          color: \"#ffcb62\",\n          mode: \"grid\",\n          type: \"Neutrophil-Positive\",\n          size: 50\n        }\n      },\n      {\n        title: \"Negative\",\n        value: \"Negative\",\n        color: \"#6296ff\",\n        data: {\n          color: \"#6296ff\",\n          mode: \"grid\",\n          type: \"Neutrophil-Negative\",\n          size: 50\n        }\n      }\n    ]\n  },\n  {\n    title: \"Necrosis\",\n    value: \"Necrosis\",\n    children: [\n      {\n        title: \"Positive\",\n        value: \"Positive\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#ff00d9\",\n            data: {\n              color: \"#ff00d9\",\n              mode: \"grid\",\n              type: \"Necrosis-Positive\",\n              size: 100\n            }\n          },\n          {\n            title: 500,\n            value: 500,\n            color: \"#ff00d9\",\n            data: {\n              color: \"#ff00d9\",\n              mode: \"grid\",\n              type: \"Necrosis-Positive\",\n              size: 500\n            }\n          }\n        ]\n      },\n      {\n        title: \"Negative\",\n        value: \"Negative\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#00ff26\",\n            data: {\n              color: \"#00ff26\",\n              mode: \"grid\",\n              type: \"Necrosis-Negative\",\n              size: 100\n            }\n          },\n          {\n            title: 500,\n            value: 500,\n            color: \"#00ff26\",\n            data: {\n              color: \"#00ff26\",\n              mode: \"grid\",\n              type: \"Necrosis-Negative\",\n              size: 500\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    title: \"Tumor\",\n    value: \"Tumor\",\n    children: [\n      {\n        title: \"Positive\",\n        value: \"Positive\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#790cff\",\n            data: {\n              color: \"#790cff\",\n              mode: \"grid\",\n              type: \"Tumor-Positive\",\n              size: 100\n            }\n          },\n          {\n            title: 300,\n            value: 300,\n            color: \"#790cff\",\n            data: {\n              color: \"#790cff\",\n              mode: \"grid\",\n              type: \"Tumor-Positive\",\n              size: 300\n            }\n          },\n          {\n            title: 1000,\n            value: 1000,\n            color: \"#790cff\",\n            data: {\n              color: \"#790cff\",\n              mode: \"grid\",\n              type: \"Tumor-Positive\",\n              size: 1000\n            }\n          },\n          {\n            title: 2000,\n            value: 2000,\n            color: \"#790cff\",\n            data: {\n              color: \"#790cff\",\n              mode: \"grid\",\n              type: \"Tumor-Positive\",\n              size: 2000\n            }\n          }\n        ]\n      },\n      {\n        title: \"Negative\",\n        value: \"Negative\",\n        children: [\n          {\n            title: 100,\n            value: 100,\n            color: \"#92ff0c\",\n            data: {\n              color: \"#92ff0c\",\n              mode: \"grid\",\n              type: \"Tumor-Negative\",\n              size: 100\n            }\n          },\n          {\n            title: 300,\n            value: 300,\n            color: \"#92ff0c\",\n            data: {\n              color: \"#92ff0c\",\n              mode: \"grid\",\n              type: \"Tumor-Negative\",\n              size: 300\n            }\n          },\n          {\n            title: 1000,\n            value: 1000,\n            color: \"#92ff0c\",\n            data: {\n              color: \"#92ff0c\",\n              mode: \"grid\",\n              type: \"Tumor-Negative\",\n              size: 1000\n            }\n          },\n          {\n            title: 2000,\n            value: 2000,\n            color: \"#92ff0c\",\n            data: {\n              color: \"#92ff0c\",\n              mode: \"grid\",\n              type: \"Tumor-Negative\",\n              size: 2000\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    title: \"Prostate\",\n    value: \"Prostate\",\n    children: [\n      {\n        title: \"Benign\",\n        value: \"Benign\",\n        color: \"#8dd3c7\",\n        checked: true,\n        data: { color: \"#8dd3c7\", mode: \"free\", type: \"Prostate-Benign\" }\n      },\n      {\n        title: \"Gleason 3\",\n        value: \"Gleason 3\",\n        color: \"#ffffb3\",\n        data: { color: \"#ffffb3\", mode: \"free\", type: \"Prostate-Gleason 3\" }\n      },\n      {\n        title: \"Gleason 4\",\n        value: \"Gleason 4\",\n        color: \"#bebada\",\n        data: { color: \"#bebada\", mode: \"free\", type: \"Prostate-Gleason 4\" }\n      },\n      {\n        title: \"Gleason 5\",\n        value: \"Gleason 5\",\n        color: \"#fb8072\",\n        data: { color: \"#fb8072\", mode: \"free\", type: \"Prostate-Gleason 5\" }\n      },\n      {\n        title: \"Cancer NOS\",\n        value: \"Cancer NOS\",\n        color: \"#80b1d3\",\n        data: { color: \"#80b1d3\", mode: \"free\", type: \"Prostate-Cancer NOS\" }\n      }\n    ]\n  },\n  {\n    title: \"NSCLC\",\n    value: \"NSCLC\",\n    children: [\n      {\n        title: \"Benign\",\n        value: \"Benign\",\n        color: \"#fdb462\",\n        data: { color: \"#fdb462\", mode: \"free\", type: \"NSCLC-Benign\" }\n      },\n      {\n        title: \"Squamous CA\",\n        value: \"Squamous CA\",\n        color: \"#b3de69\",\n        data: { color: \"#b3de69\", mode: \"free\", type: \"NSCLC-Squamous CA\" }\n      },\n      {\n        title: \"Adeno CA (all)\",\n        value: \"Adeno CA (all)\",\n        color: \"#fccde5\",\n        data: { color: \"#fccde5\", mode: \"free\", type: \"NSCLC-Adeno CA (all)\" }\n      },\n      {\n        title: \"Acinar\",\n        value: \"Acinar\",\n        color: \"#d9d9d9\",\n        data: { color: \"#d9d9d9\", mode: \"free\", type: \"NSCLC-Acinar\" }\n      },\n      {\n        title: \"Lapidic\",\n        value: \"Lapidic\",\n        color: \"#bc80bd\",\n        data: { color: \"#bc80bd\", mode: \"free\", type: \"NSCLC-Lapidic\" }\n      },\n      {\n        title: \"Solid\",\n        value: \"Solid\",\n        color: \"#ccebc5\",\n        data: { color: \"#ccebc5\", mode: \"free\", type: \"NSCLC-Solid\" }\n      },\n      {\n        title: \"Papillary\",\n        value: \"Papillary\",\n        color: \"#ffed6f\",\n        data: { color: \"#ffed6f\", mode: \"free\", type: \"NSCLC-Papillary\" }\n      },\n      {\n        title: \"Micropapillary\",\n        value: \"Micropapillary\",\n        color: \"#6a3d9a\",\n        data: { color: \"#6a3d9a\", mode: \"free\", type: \"NSCLC-Micropapillary\" }\n      }\n    ]\n  }\n];\n// if no pen data, add our default\nlet penConfig = JSON.parse(window.localStorage.getItem(\"penConfig\"))\nif (!penConfig){\n  penConfig=[];\n  penConfig.push({config_name:\"preset_label\", configuration:defaultPens})\n  window.localStorage.setItem(\"penConfig\", JSON.stringify(penConfig))\n}\n\nStore.prototype.getConfigByName = function(name){\n  if (name==\"preset_label\"){\n    return new Promise(function(res, rej){\n      res(penConfig)\n    })\n  } else {\n    return new Promise(function(res, rej){\n      res([])\n    })\n  }\n}\n\n// if no template, add our default\nlet template_data = JSON.parse(window.localStorage.getItem(\"template\"))\nif (!template_data){\n  template_data=[];\n  template_data.push(defaultTemplate)\n  window.localStorage.setItem(\"template\", JSON.stringify(template_data))\n}\n\n\nexport default init_LocalStore\n","function ImgBoxMods() {\n  console.warn(\"{imgbox mods enabled}\")\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var img_id = urlParams.get('id');\n    let slideId = img_id\n    this.slideId = slideId\n    this.slideName = slideId\n    fetch(img_id + \"/info.json\").then(response => {\n      if (response.status >=400){\n        throw response;\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      let tile_count = Math.ceil(Math.log2(Math.max(data.height,data.width)))\n      let scaleFactors = []\n      for(let i=0; i <= tile_count; i++){\n        scaleFactors.push(2**i)\n      }\n      let imbox_source = {\n        \"@context\": \"http://iiif.io/api/image/2/context.json\",\n        \"@id\": img_id,\n        \"height\": data.height,\n        \"width\": data.width,\n        \"profile\": [\"http://iiif.io/api/image/2/level2.json\"],\n        \"protocol\": \"http://iiif.io/api/image\",\n        \"tiles\": [{\n          \"scaleFactors\": scaleFactors,\n          \"width\": 256\n        }]\n      }\n      this.viewer.open(imbox_source);\n      // set mpp\n      this.mpp_x = data['mpp-x']\n      this.mpp_y = data['mpp-y']\n      this.mpp = data.mpp || this.mpp_x || this.mpp_y || 1e9;\n      this.mpp_x = data['mpp-x'] || this.mpp\n      this.mpp_y = data['mpp-y'] || this.mpp\n\n      this.viewer.mpp = this.mpp;\n      this.viewer.mpp_x = this.mpp_x;\n      this.viewer.mpp_y = this.mpp_y;\n\n      //set scalebar\n      let mpp = this.mpp_x || this.mpp;\n      if(mpp&&mpp!=1e9) this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = \"0\"\n      x.name = this.slideName\n      x.mpp = this.mpp;\n      x.mpp_x = this.mpp_x;\n      x.mpp_y = this.mpp_y;\n      x.location = img_id;\n      x.url = imbox_source;\n      if (func && typeof func === 'function'){\n        func.call(null, x);\n      }\n      Loading.text.textContent = `Loading Slide's Tiles...`;\n      // WARN; note that spyglass isn't working due to semi-hardcoded value at init.js line 140\n      // we may want another init.js or our own callback\n    }).catch(e=>{\n      console.error(e)\n      Loading.text.textContent = \"ERROR - Slide May be Broken or Unsupported\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nexport default ImgBoxMods\n","import init_LocalStore from './LocalStore.js'\nimport ImgBoxMods from './ImgBoxMods.js'\n\ninit_LocalStore()\nImgBoxMods()\nconsole.warn(\"This setup is intended for imagebox\")\n// parcel build package/imgbox_package.js\n"]}